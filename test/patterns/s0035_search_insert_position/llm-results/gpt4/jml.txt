```jml
/*@
  requires nums != null;
  requires 1 <= nums.length && nums.length <= 10000;
  requires (\forall int i; 0 <= i < nums.length; -10000 <= nums[i] && nums[i] <= 10000);
  requires (\forall int i; 0 <= i < nums.length - 1; nums[i] < nums[i + 1]);
  requires -10000 <= target && target <= 10000;
  ensures \result >= 0 && \result <= nums.length;
  ensures (\exists int i; 0 <= i < nums.length && nums[i] == target) ==> nums[\result] == target;
  ensures !(\exists int i; 0 <= i < nums.length && nums[i] == target) ==> 
           (\forall int i; 0 <= i < \result; nums[i] < target) && 
           (\forall int i; \result <= i < nums.length; nums[i] > target);
@*/
public int searchInsert(int[] nums, int target) {
    int left = 0;
    int right = nums.length - 1;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (nums[mid] == target) {
            return mid;
        } else if (nums[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return left;
}
```