Thinking...Thinking...Thinking...Thinking...Thinking...Thinking... (1s elapsed)Thinking... (1s elapsed)Thinking... (1s elapsed)Thinking... (1s elapsed)Thinking... (1s elapsed)Thinking... (2s elapsed)Thinking... (2s elapsed)Thinking... (2s elapsed)Thinking... (2s elapsed)Thinking... (2s elapsed)Thinking... (3s elapsed)Thinking... (3s elapsed)Thinking... (3s elapsed)Thinking... (3s elapsed)Thinking... (3s elapsed)Thinking... (4s elapsed)Thinking... (4s elapsed)Thinking... (4s elapsed)Thinking... (4s elapsed)Thinking... (4s elapsed)Thinking... (5s elapsed)Thinking... (5s elapsed)Thinking... (5s elapsed)Thinking... (5s elapsed)Thinking... (5s elapsed)Thinking... (6s elapsed)Thinking... (6s elapsed)Thinking... (6s elapsed)Thinking... (6s elapsed)Thinking... (6s elapsed)Thinking... (7s elapsed)Thinking... (7s elapsed)- String `s` must be non null and its length must be between one and five hundred thousand inclusive  
- String `s` must contain only uppercase English letters lowercase English letters and digits  
- result String must include every occurrence of each character that appears in String `s` and must not include any additional characters  
- result String must arrange characters in contiguous groups where each group is composed of identical characters  
- result String must order these contiguous groups so that groups with higher frequency in String `s` appear before groups with lower frequency in String `s`  
- When two or more characters share the same frequency their relative ordering in result String is unconstrained while still respecting all other behavioural specifications
