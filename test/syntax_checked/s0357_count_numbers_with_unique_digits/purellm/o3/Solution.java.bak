package g0301_0400.s0357_count_numbers_with_unique_digits;

// #Medium #Dynamic_Programming #Math #Backtracking
// #2022_07_11_Time_0_ms_(100.00%)_Space_41.2_MB_(23.67%)

public class Solution {
///*@ public normal_behavior
      @ // // // // // // // // // // //   requires 0 <= n && n <= 8;
      @ // //
      @ // // // //   ensures \result ==
      @ // // // // //           (\num_of int x ;                          // number of …
      @ // // //                0 <= x && x < pow10(n)              //   … values x in range
      @ // // //                && uniqueDigits(x)                  //   … whose digits are unique
      @ // // //           );
      @ // //
      @ // //   // obvious frame condition: the method is pure
      @ // // // //   assignable \nothing;
      @ // // // // // // // //*/
//public int countNumbersWithUniqueDigits(int n) {
//int ans = 1;
////////////////for (int i = 1; i <= n; i++) {
//int mul = 1;
//////////////for (int j = 1; j < i; j++) {
//mul *= (10 - j);
////}
//ans = ans + 9 * mul;
//}
//return ans;
//}
////}