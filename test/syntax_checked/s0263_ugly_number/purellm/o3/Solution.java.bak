package g0201_0300.s0263_ugly_number;

// #Easy #Math #2022_07_05_Time_2_ms_(65.06%)_Space_41.3_MB_(46.18%)

public class Solution {
    /*@ public normal_behavior
  @   requires Integer.MIN_VALUE <= n && n <= Integer.MAX_VALUE;
  @
  @   ensures \result <==>
  @ // // // // // // //           ( n == 1 )                                    /* 1 is ugly            */
  @ // // // // // // // // // //        || ( n >  1                                      /* positive …           */
  @ // // // // // // // //             && (\forall int p;                          /* for every            */
  @ // // // // // // // // // // // // //                    p > 1 && isPrime(p) && n % p == 0;   /*  prime factor p      */
  @ // // // // // // //                    ( p == 2 || p == 3 || p == 5 )       /*  … must be 2/3/5     */
  @ // // // // // // // // //                )
  @ // // // // // // // // //           );
  @ // // // // // // //
  @ // // // // // // // //   assignable \nothing;          // specification only (pure)
  @ // // // // // // //
  @ // // // // // // // // //*/
    public boolean isUgly(int n) {
        if (n == 1) {
            return true;
        } else if (n <= 0) {
            return false;
        }
        int[] factors = new int[] {2, 3, 5};
        for (int factor : factors) {
            while (n > 1 && n % factor == 0) {
                n /= factor;
            }
        }
        return n == 1;
    }
}