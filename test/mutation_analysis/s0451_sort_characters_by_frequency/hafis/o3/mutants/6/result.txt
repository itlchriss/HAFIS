./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:21: verify: The prover cannot establish an assertion (InvariantExceptionExit: /Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/CharSequence.jml:30:) in method frequencySort: g0401_0500.s0451_sort_characters_by_frequency.Solution.frequencySort(String) (parameter s)
    public String frequencySort(String s) {
                                       ^
/Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:21:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:41: verify: The prover cannot establish an assertion (InvariantExit: /Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/CharSequence.jml:30:) in method frequencySort: g0401_0500.s0451_sort_characters_by_frequency.Solution.frequencySort(String) (for result type)
        return sb.toString();
        ^
/Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: ./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:41:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:41: verify: The prover cannot establish an assertion (Postcondition: ./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:17:) in method frequencySort
        return sb.toString();
        ^
./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:17: verify: Associated declaration: ./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:41:
//@ ensures(\result.length() == s.length());
    ^
./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:41: verify: The prover cannot establish an assertion (Postcondition: ./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:18:) in method frequencySort
        return sb.toString();
        ^
./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:18: verify: Associated declaration: ./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:41:
//@ ensures((s.equals("tree")) ==> (\result.equals("eert")));
    ^
./test/mutation_analysis/s0451_sort_characters_by_frequency/hafis/o3/mutants/6/Solution.java:21: verify: Validity is unknown - time or memory limit reached: : Aborted proof: timeout
    public String frequencySort(String s) {
                  ^
9 verification failures
