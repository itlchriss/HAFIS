./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:14: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \max
      @           (\max int i; 0 <= i && i < nums.length; nums[i]) -
                   ^
./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:15: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \min
      @           (\min int i; 0 <= i && i < nums.length; nums[i]) - 2 * k);
                   ^
./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:16: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \max
      @ ensures \result <= (\max int i; 0 <= i && i < nums.length; nums[i]) -
                            ^
./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:17: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \min
      @                    (\min int i; 0 <= i && i < nums.length; nums[i]);
                            ^
./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:23: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \max
      @           \result <= (\max int i; 0 <= i && i < modifiedNums.length; modifiedNums[i]) -
                              ^
./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:24: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \min
      @                     (\min int i; 0 <= i && i < modifiedNums.length; modifiedNums[i]));
                             ^
./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:34: verify: The prover cannot establish an assertion (Postcondition: ./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:18:) in method smallestRangeI
            return 0;
            ^
./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:18: verify: Associated declaration: ./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:34:
      @ ensures (\forall int[] modifiedNums;
        ^
./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:34: verify: The prover cannot establish an assertion (Postcondition: ./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:16:) in method smallestRangeI
            return 0;
            ^
./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:16: verify: Associated declaration: ./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:34:
      @ ensures \result <= (\max int i; 0 <= i && i < nums.length; nums[i]) -
        ^
./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:34: verify: The prover cannot establish an assertion (Postcondition: ./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:13:) in method smallestRangeI
            return 0;
            ^
./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:13: verify: Associated declaration: ./test/mutation_analysis/s0908_smallest_range_i/purellm/claude4opus/mutants/1/Solution.java:34:
      @ ensures \result == Math.max(0,
        ^
6 warnings
6 verification failures
