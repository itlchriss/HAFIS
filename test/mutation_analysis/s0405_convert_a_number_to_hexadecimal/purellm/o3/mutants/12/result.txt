/Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/Integer.jml:97: Note: Not implemented for static checking: method axioms with old clauses: method toHexString(int)
      @   old long pos_i = (1L<<32) + i;
          ^
./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:65: verify: The prover cannot establish an assertion (Postcondition: ./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:27:) in method toHex
        return sb.reverse().toString();
        ^
./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:27: verify: Associated declaration: ./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:65:
      @   ensures  \result.equals(Integer.toHexString(num));
          ^
./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:52: verify: The prover cannot establish an assertion (Postcondition: ./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:33:) in method toHex
            return "0";
            ^
./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:33: verify: Associated declaration: ./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:52:
      @   ensures  (\forall int i; 0 <= i && i < \result.length();
          ^
./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:52: verify: The prover cannot establish an assertion (Postcondition: ./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:44:) in method toHex
            return "0";
            ^
./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:44: verify: Associated declaration: ./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:52:
      @   ensures  unsignedValueOfHex(\result) == ((long)num & 0xFFFF_FFFFL);
          ^
/Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/Integer.jml:101: verify: The prover cannot establish an assertion (ArithmeticCastRange: /Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/Integer.jml:34:) in method toHex
      @   ensures (int)Long.parseLong(\result,16) == i;
                  ^
/Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/Integer.jml:34: verify: Associated declaration: /Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/Integer.jml:101:
    //+RAC@ represents theInteger = intValue();
                              ^
/Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/Integer.jml:101: verify: The prover cannot establish an assertion (ArithmeticCastRange: /Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/Integer.jml:34:) in method toHex
      @   ensures (int)Long.parseLong(\result,16) == i;
                  ^
/Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/Integer.jml:34: verify: Associated declaration: /Users/chrissleong/Documents/Phd_Studies/openjml/specs/java/lang/Integer.jml:101:
    //+RAC@ represents theInteger = intValue();
                              ^
./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:65: verify: The prover cannot establish an assertion (Postcondition: ./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:39:) in method toHex
        return sb.reverse().toString();
        ^
./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:39: verify: Associated declaration: ./test/mutation_analysis/s0405_convert_a_number_to_hexadecimal/purellm/o3/mutants/12/Solution.java:65:
      @   ensures  (num != 0) ==> \result.charAt(0) != '0';
          ^
12 verification failures
