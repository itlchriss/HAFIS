./test/mutation_analysis/s0628_maximum_product_of_three_numbers/hafis/o3/mutants/24/Solution.java:39: verify: The prover cannot establish an assertion (PossiblyDivideByZero) in method maximumProduct
        return Math.max(min1 % min2 * max1, max1 * max2 * max3);
                             ^
./test/mutation_analysis/s0628_maximum_product_of_three_numbers/hafis/o3/mutants/24/Solution.java:39: verify: The prover cannot establish an assertion (Postcondition: ./test/mutation_analysis/s0628_maximum_product_of_three_numbers/hafis/o3/mutants/24/Solution.java:11:) in method maximumProduct
        return Math.max(min1 % min2 * max1, max1 * max2 * max3);
        ^
./test/mutation_analysis/s0628_maximum_product_of_three_numbers/hafis/o3/mutants/24/Solution.java:11: verify: Associated declaration: ./test/mutation_analysis/s0628_maximum_product_of_three_numbers/hafis/o3/mutants/24/Solution.java:39:
//@ ensures((\result <= 1000000000) && (\result >= -1000000000));
    ^
./test/mutation_analysis/s0628_maximum_product_of_three_numbers/hafis/o3/mutants/24/Solution.java:15: verify: Validity is unknown - time or memory limit reached: : Aborted proof: timeout
    public int maximumProduct(int[] nums) {
               ^
4 verification failures
