./test/mutation_analysis/s0233_number_of_digit_one/purellm/gpt4/mutants/25/Solution.java:15: warning: A non-pure method is being called where it is not permitted: g0201_0300.s0233_number_of_digit_one.Solution.countDigitOne(int)
  @ ensures \result == (\sum int i; 0 <= i && i <= n; countDigitOne(i));
                                                                   ^
./test/mutation_analysis/s0233_number_of_digit_one/purellm/gpt4/mutants/25/Solution.java:15: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
  @ ensures \result == (\sum int i; 0 <= i && i <= n; countDigitOne(i));
                        ^
./test/mutation_analysis/s0233_number_of_digit_one/purellm/gpt4/mutants/25/Solution.java:30: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \num_of
  @ ensures \result == (\num_of int j; 0 <= j && j < 10; j == 1);
                        ^
./test/mutation_analysis/s0233_number_of_digit_one/purellm/gpt4/mutants/25/Solution.java:15: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \sum
  @ ensures \result == (\sum int i; 0 <= i && i <= n; countDigitOne(i));
                        ^
./test/mutation_analysis/s0233_number_of_digit_one/purellm/gpt4/mutants/25/Solution.java:30: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \num_of
  @ ensures \result == (\num_of int j; 0 <= j && j < 10; j == 1);
                        ^
./test/mutation_analysis/s0233_number_of_digit_one/purellm/gpt4/mutants/25/Solution.java:49: verify: The prover cannot establish an assertion (Postcondition: ./test/mutation_analysis/s0233_number_of_digit_one/purellm/gpt4/mutants/25/Solution.java:30:) in method countDigitOne
        return ans;
        ^
./test/mutation_analysis/s0233_number_of_digit_one/purellm/gpt4/mutants/25/Solution.java:30: verify: Associated declaration: ./test/mutation_analysis/s0233_number_of_digit_one/purellm/gpt4/mutants/25/Solution.java:49:
  @ ensures \result == (\num_of int j; 0 <= j && j < 10; j == 1);
    ^
./test/mutation_analysis/s0233_number_of_digit_one/purellm/gpt4/mutants/25/Solution.java:41: verify: The prover cannot establish an assertion (PossiblyDivideByZero) in method countDigitOne
                ans += q * curr10 % cum + 1;
                                  ^
5 warnings
3 verification failures
