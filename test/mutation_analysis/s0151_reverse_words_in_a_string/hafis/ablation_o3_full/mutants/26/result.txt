error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
  Reason: Unexpected exception: ADD METHOD AXIOMS java.util.NoSuchElementException
java.util.NoSuchElementException
	at jdk.compiler/com.sun.tools.javac.util.List$2.next(List.java:455)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.addMethodAxioms(JmlAssertionAdder.java:22184)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.addMethodAxiomsPlus(JmlAssertionAdder.java:11752)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.applyHelper(JmlAssertionAdder.java:9298)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitApply(JmlAssertionAdder.java:8372)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodInvocation.accept(JCTree.java:1816)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1589)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertJML(JmlAssertionAdder.java:1701)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.applyHelper(JmlAssertionAdder.java:11182)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitApply(JmlAssertionAdder.java:8372)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodInvocation.accept(JCTree.java:1816)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1589)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitExec(JmlAssertionAdder.java:7361)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCExpressionStatement.accept(JCTree.java:1603)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:75)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertIntoBlock(JmlAssertionAdder.java:1863)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitIf(JmlAssertionAdder.java:7252)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCIf.accept(JCTree.java:1572)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convert(JmlAssertionAdder.java:1477)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertMethodBodyNoInit(JmlAssertionAdder.java:1244)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitJmlMethodDecl(JmlAssertionAdder.java:18328)
	at jdk.compiler/org.jmlspecs.openjml.JmlTree$JmlMethodDecl.accept(JmlTree.java:1412)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitJmlClassDecl(JmlAssertionAdder.java:16973)
	at jdk.compiler/org.jmlspecs.openjml.JmlTree$JmlClassDecl.accept(JmlTree.java:1324)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convert(JmlAssertionAdder.java:1477)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlEsc.check(JmlEsc.java:112)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.esc(JmlCompiler.java:782)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.flow(JmlCompiler.java:619)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:967)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.compile(JmlCompiler.java:221)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:325)
	at jdk.compiler/org.jmlspecs.openjml.Main.compile(Main.java:565)
	at jdk.compiler/org.jmlspecs.openjml.Main.execute(Main.java:403)
	at jdk.compiler/org.jmlspecs.openjml.Main.execute(Main.java:360)
	at jdk.compiler/org.jmlspecs.openjml.Main.main(Main.java:320)
	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:53)
NULL PARAMS java.lang.CharSequence # Scope[lessThan(char[],char[]), equal(char[],\bigint,char[],\bigint,\bigint), equal(char[],char[]), initialCharSequence(), content(java.lang.CharSequence), owner(java.lang.Object), charArray, lambda$chars$0(), lambda$codePoints$1(), compare(java.lang.CharSequence,java.lang.CharSequence), codePoints(), chars(), toString(), subSequence(int,int), isEmpty(), charAt(int), length()] # com.sun.tools.javac.code.Scope$ScopeImpl$$Lambda/0x000000c000206000@2a996df9 # equals(java.lang.Object)
java.util.NoSuchElementException
	at jdk.compiler/com.sun.tools.javac.util.List$2.next(List.java:455)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.addMethodAxioms(JmlAssertionAdder.java:22184)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.addMethodAxiomsPlus(JmlAssertionAdder.java:11752)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.applyHelper(JmlAssertionAdder.java:9298)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitApply(JmlAssertionAdder.java:8372)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodInvocation.accept(JCTree.java:1816)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1589)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertJML(JmlAssertionAdder.java:1701)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.applyHelper(JmlAssertionAdder.java:11182)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitApply(JmlAssertionAdder.java:8372)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodInvocation.accept(JCTree.java:1816)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertExpr(JmlAssertionAdder.java:1589)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitExec(JmlAssertionAdder.java:7361)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCExpressionStatement.accept(JCTree.java:1603)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:75)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertIntoBlock(JmlAssertionAdder.java:1863)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitIf(JmlAssertionAdder.java:7252)
	at jdk.compiler/com.sun.tools.javac.tree.JCTree$JCIf.accept(JCTree.java:1572)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convert(JmlAssertionAdder.java:1477)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convertMethodBodyNoInit(JmlAssertionAdder.java:1244)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitJmlMethodDecl(JmlAssertionAdder.java:18328)
	at jdk.compiler/org.jmlspecs.openjml.JmlTree$JmlMethodDecl.accept(JmlTree.java:1412)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.visitJmlClassDecl(JmlAssertionAdder.java:16973)
	at jdk.compiler/org.jmlspecs.openjml.JmlTree$JmlClassDecl.accept(JmlTree.java:1324)
	at jdk.compiler/com.sun.tools.javac.tree.TreeScanner.scan(TreeScanner.java:50)
	at jdk.compiler/org.jmlspecs.openjml.visitors.JmlTreeScanner.scan(JmlTreeScanner.java:70)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlAssertionAdder.convert(JmlAssertionAdder.java:1477)
	at jdk.compiler/org.jmlspecs.openjml.esc.JmlEsc.check(JmlEsc.java:112)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.esc(JmlCompiler.java:782)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.flow(JmlCompiler.java:619)
	at jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:967)
	at jdk.compiler/com.sun.tools.javac.main.JmlCompiler.compile(JmlCompiler.java:221)
	at jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:325)
	at jdk.compiler/org.jmlspecs.openjml.Main.compile(Main.java:565)
	at jdk.compiler/org.jmlspecs.openjml.Main.execute(Main.java:403)
	at jdk.compiler/org.jmlspecs.openjml.Main.execute(Main.java:360)
	at jdk.compiler/org.jmlspecs.openjml.Main.main(Main.java:320)
	at jdk.compiler/com.sun.tools.javac.Main.main(Main.java:53)
NULL PARAMS java.lang.CharSequence # Scope[lessThan(char[],char[]), equal(char[],\bigint,char[],\bigint,\bigint), equal(char[],char[]), initialCharSequence(), content(java.lang.CharSequence), owner(java.lang.Object), charArray, lambda$chars$0(), lambda$codePoints$1(), compare(java.lang.CharSequence,java.lang.CharSequence), codePoints(), chars(), toString(), subSequence(int,int), isEmpty(), charAt(int), length()] # com.sun.tools.javac.code.Scope$ScopeImpl$$Lambda/0x000000c000206000@625b0589 # equals(java.lang.Object)
1 error
