[07/25 18:41:06] [INFO   ] org.mutationtesting.major.plugin.MajorPluginTaskListener.<init>:
    Created MajorPluginTaskListener with options: [mml:../major/mml/all.mml.bin]
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.initOperatorSymbols:
    Initializing operator symbols for opcode mapping
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.mutateTree:
    Mutating tree: Env[AttrContext[Scope[super, this]],outer=Env[AttrContext[Scope[java.util.Collections, java.util.Arrays, g0301_0400.s0326_power_of_three.Solution]]]]
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.visitClassDef:
    CLASS: g0301_0400.s0326_power_of_three.Solution
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.visitMethodDef:
    METHOD: <init>([])null
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.visitMethodDef:
    METHOD: isPowerOfThree([int n])boolean
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 1
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 1: Solution.isPowerOfThree(line 16, col 15)
            mutation operator group:   ROR
            mutation operator:         <(int,int) |==> !=(int,int)
            original:                  n < 3 
            mutant:                    n != 3
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 2
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 2: Solution.isPowerOfThree(line 16, col 15)
            mutation operator group:   ROR
            mutation operator:         <(int,int) |==> <=(int,int)
            original:                  n < 3 
            mutant:                    n <= 3
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 3
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 3: Solution.isPowerOfThree(line 16, col 15)
            mutation operator group:   ROR
            mutation operator:         <(int,int) |==> FALSE(int,int)
            original:                  n < 3 
            mutant:                    false
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 4
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 4: Solution.isPowerOfThree(line 16, col 24)
            mutation operator group:   ROR
            mutation operator:         !=(int,int) |==> <(int,int)
            original:                  n != 1 
            mutant:                    n < 1
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 5
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 5: Solution.isPowerOfThree(line 16, col 24)
            mutation operator group:   ROR
            mutation operator:         !=(int,int) |==> >(int,int)
            original:                  n != 1 
            mutant:                    n > 1
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 6
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 6: Solution.isPowerOfThree(line 16, col 24)
            mutation operator group:   ROR
            mutation operator:         !=(int,int) |==> TRUE(int,int)
            original:                  n != 1 
            mutant:                    true
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 7
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 7: Solution.isPowerOfThree(line 16, col 19)
            mutation operator group:   COR
            mutation operator:         &&(boolean,boolean) |==> ==(boolean,boolean)
            original:                  n < 3 && n != 1 
            mutant:                    n < 3 == (n != 1)
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 8
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 8: Solution.isPowerOfThree(line 16, col 19)
            mutation operator group:   COR
            mutation operator:         &&(boolean,boolean) |==> FALSE(boolean,boolean)
            original:                  n < 3 && n != 1 
            mutant:                    false
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 9
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 9: Solution.isPowerOfThree(line 16, col 15)
            mutation operator group:   COR
            mutation operator:         &&(boolean,boolean) |==> LHS(boolean,boolean)
            original:                  n < 3 && n != 1 
            mutant:                    n < 3
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 10
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 10: Solution.isPowerOfThree(line 16, col 24)
            mutation operator group:   COR
            mutation operator:         &&(boolean,boolean) |==> RHS(boolean,boolean)
            original:                  n < 3 && n != 1 
            mutant:                    n != 1
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 11
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutantSTD:
    Logging mutantSTD 11: (STD) return false; -> <NO-OP>
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 12
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 12: Solution.isPowerOfThree(line 19, col 18)
            mutation operator group:   ROR
            mutation operator:         !=(int,int) |==> <(int,int)
            original:                  n != 1 
            mutant:                    n < 1
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 13
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 13: Solution.isPowerOfThree(line 19, col 18)
            mutation operator group:   ROR
            mutation operator:         !=(int,int) |==> >(int,int)
            original:                  n != 1 
            mutant:                    n > 1
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 14
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 14: Solution.isPowerOfThree(line 19, col 18)
            mutation operator group:   ROR
            mutation operator:         !=(int,int) |==> TRUE(int,int)
            original:                  n != 1 
            mutant:                    true
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 15
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 15: Solution.isPowerOfThree(line 20, col 19)
            mutation operator group:   AOR
            mutation operator:         %(int,int) |==> *(int,int)
            original:                  n % 3 
            mutant:                    n * 3
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 16
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 16: Solution.isPowerOfThree(line 20, col 19)
            mutation operator group:   AOR
            mutation operator:         %(int,int) |==> +(int,int)
            original:                  n % 3 
            mutant:                    n + 3
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 17
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 17: Solution.isPowerOfThree(line 20, col 19)
            mutation operator group:   AOR
            mutation operator:         %(int,int) |==> -(int,int)
            original:                  n % 3 
            mutant:                    n - 3
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 18
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 18: Solution.isPowerOfThree(line 20, col 19)
            mutation operator group:   AOR
            mutation operator:         %(int,int) |==> /(int,int)
            original:                  n % 3 
            mutant:                    n / 3
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 19
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 19: Solution.isPowerOfThree(line 20, col 23)
            mutation operator group:   ROR
            mutation operator:         !=(int,int) |==> <(int,int)
            original:                  n % 3 != 0 
            mutant:                    n % 3 < 0
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 20
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 20: Solution.isPowerOfThree(line 20, col 23)
            mutation operator group:   ROR
            mutation operator:         !=(int,int) |==> >(int,int)
            original:                  n % 3 != 0 
            mutant:                    n % 3 > 0
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 21
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutant:
    Logging mutant 21: Solution.isPowerOfThree(line 20, col 23)
            mutation operator group:   ROR
            mutation operator:         !=(int,int) |==> TRUE(int,int)
            original:                  n % 3 != 0 
            mutant:                    true
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 22
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutantSTD:
    Logging mutantSTD 22: (STD) return false; -> <NO-OP>
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.nextMutant:
    Creating mutant 23
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.mutation.Mutator.logMutantSTD:
    Logging mutantSTD 23: (STD) n /= 3; -> <NO-OP>
[07/25 18:41:06] [INFO   ] org.mutationtesting.major.plugin.MajorPluginTaskListener.mutate:
    Generated 23 mutants (85 ms)
